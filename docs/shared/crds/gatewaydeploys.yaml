apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  name: gatewaydeploys.asm.alauda.io
spec:
  group: asm.alauda.io
  names:
    kind: GatewayDeploy
    listKind: GatewayDeployList
    plural: gatewaydeploys
    shortNames:
    - gdeploy
    singular: gatewaydeploy
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: PHASE
      type: string
    - jsonPath: .status.proxy.revision.current
      name: VERSION
      type: string
    - jsonPath: .status.proxy.revision.target
      name: NEWVERSION
      type: string
    - jsonPath: .status.proxy.state
      name: State
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GatewayDeploy is the Schema for the gatewaydeploys API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GatewayDeploySpec defines the desired state of GatewayDeploy
            properties:
              accessLogging:
                description: Access-log configuration.
                properties:
                  enabled:
                    default: false
                    type: boolean
                required:
                - enabled
                type: object
              global:
                description: Global configuration.
                properties:
                  autoscaleEnabled:
                    description: Whether auto-scaling is enabled.
                    type: boolean
                  externalLoadBalancerIPAddress:
                    description: External Load Balancer IP address
                    type: string
                  podStrategy:
                    description: Anti-affinity strategy.
                    type: string
                  private:
                    description: Visibility to other projects
                    type: boolean
                required:
                - podStrategy
                type: object
              k8s:
                description: Kubernetes configuration.
                properties:
                  hpaSpec:
                    description: HPA configuration.
                    properties:
                      maxReplicas:
                        description: Maximum number of replicas.
                        format: int32
                        type: integer
                      minReplicas:
                        description: Minimum number of replicas.
                        format: int32
                        type: integer
                    type: object
                  nodeSelector:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Node Selector, key of the map is node's label key,
                      value of the map is a type of []string that means `In` operation
                      will be used for node selection.
                    type: object
                  nodes:
                    description: Deploy Nodes.
                    items:
                      type: string
                    type: array
                  podAnnotations:
                    additionalProperties:
                      type: string
                    description: Pod's annotations.
                    type: object
                  replicas:
                    description: Replicas.
                    format: int32
                    type: integer
                  resources:
                    description: Resource limits.
                    properties:
                      limits:
                        description: Maximum resource limits.
                        properties:
                          cpu:
                            description: CPU.
                            type: string
                          memory:
                            description: Memory.
                            type: string
                        type: object
                      requests:
                        description: Minimum resource requirements.
                        properties:
                          cpu:
                            description: CPU.
                            type: string
                          memory:
                            description: Memory.
                            type: string
                        type: object
                    type: object
                  service:
                    description: Port details.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Service's annotations.
                        type: object
                      ports:
                        description: Port details.
                        properties:
                          http:
                            description: HTTP port.
                            properties:
                              count:
                                description: Number.
                                format: int32
                                type: integer
                              data:
                                description: Port list.
                                items:
                                  properties:
                                    items:
                                      description: Info of port.
                                      items:
                                        properties:
                                          externalLoadBalancerPort:
                                            description: External Load Balancer Port
                                            format: int32
                                            type: integer
                                          nodePort:
                                            description: Node port.
                                            format: int32
                                            type: integer
                                          port:
                                            description: Service port.
                                            format: int32
                                            type: integer
                                          protocol:
                                            description: Type of protocal.
                                            type: string
                                          targetPort:
                                            description: Container port.
                                            format: int32
                                            type: integer
                                        type: object
                                      type: array
                                    name:
                                      description: Name.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          http-https:
                            description: http/https port.
                            properties:
                              count:
                                description: Number.
                                format: int32
                                type: integer
                              data:
                                description: Port list.
                                items:
                                  properties:
                                    items:
                                      description: Info of port.
                                      items:
                                        properties:
                                          externalLoadBalancerPort:
                                            description: External Load Balancer Port
                                            format: int32
                                            type: integer
                                          nodePort:
                                            description: Node port.
                                            format: int32
                                            type: integer
                                          port:
                                            description: Service port.
                                            format: int32
                                            type: integer
                                          protocol:
                                            description: Type of protocal.
                                            type: string
                                          targetPort:
                                            description: Container port.
                                            format: int32
                                            type: integer
                                        type: object
                                      type: array
                                    name:
                                      description: Name.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          https:
                            description: HTTPS port.
                            properties:
                              count:
                                description: Number.
                                format: int32
                                type: integer
                              data:
                                description: Port list.
                                items:
                                  properties:
                                    items:
                                      description: Info of port.
                                      items:
                                        properties:
                                          externalLoadBalancerPort:
                                            description: External Load Balancer Port
                                            format: int32
                                            type: integer
                                          nodePort:
                                            description: Node port.
                                            format: int32
                                            type: integer
                                          port:
                                            description: Service port.
                                            format: int32
                                            type: integer
                                          protocol:
                                            description: Type of protocal.
                                            type: string
                                          targetPort:
                                            description: Container port.
                                            format: int32
                                            type: integer
                                        type: object
                                      type: array
                                    name:
                                      description: Name.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          tcp:
                            description: TCP port.
                            properties:
                              count:
                                description: Number.
                                format: int32
                                type: integer
                              data:
                                description: Port list.
                                items:
                                  properties:
                                    items:
                                      description: Info of port.
                                      items:
                                        properties:
                                          externalLoadBalancerPort:
                                            description: External Load Balancer Port
                                            format: int32
                                            type: integer
                                          nodePort:
                                            description: Node port.
                                            format: int32
                                            type: integer
                                          port:
                                            description: Service port.
                                            format: int32
                                            type: integer
                                          protocol:
                                            description: Type of protocal.
                                            type: string
                                          targetPort:
                                            description: Container port.
                                            format: int32
                                            type: integer
                                        type: object
                                      type: array
                                    name:
                                      description: Name.
                                      type: string
                                  type: object
                                type: array
                            type: object
                        type: object
                      type:
                        description: Type of service.
                        type: string
                    type: object
                  tolerations:
                    description: Taint tolerance.
                    items:
                      properties:
                        effect:
                          description: Scheduling policy.
                          type: string
                        key:
                          description: Key of taint.
                          type: string
                        operator:
                          description: Tolerant matching strategy.
                          type: string
                        value:
                          description: Value of taint.
                          type: string
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
              revision:
                description: Gateway Revision。
                type: string
              type:
                description: Type of gateway.
                type: string
            required:
            - global
            - k8s
            - revision
            - type
            type: object
          status:
            description: GatewayDeployStatus defines the observed state of GatewayDeploy
            properties:
              availableReplicas:
                description: Number of replicas available.
                format: int32
                type: integer
              message:
                description: A human readable message indicating details about why
                  the gateway is in this phase.
                type: string
              phase:
                description: Status of the gateway workloads and service.
                type: string
              pods:
                description: Pod status.
                items:
                  properties:
                    hostIP:
                      description: Node ip.
                      type: string
                    phase:
                      description: Status of container.
                      type: string
                    podIP:
                      description: Pod ip.
                      type: string
                  type: object
                type: array
              proxy:
                description: Istio Proxy status
                properties:
                  conditions:
                    items:
                      description: "Condition contains details for one aspect of the
                        current state of this API Resource. --- This struct is intended
                        for direct use as an array at the field path .status.conditions.
                        \ For example, \n type FooStatus struct{ // Represents the
                        observations of a foo's current state. // Known .status.conditions.type
                        are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                        // +patchStrategy=merge // +listType=map // +listMapKey=type
                        Conditions []metav1.Condition `json:\"conditions,omitempty\"
                        patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                        \n // other fields }"
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime is the last time the condition
                            transitioned from one status to another. This should be
                            when the underlying condition changed.  If that is not
                            known, then using the time when the API field changed
                            is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: message is a human readable message indicating
                            details about the transition. This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: observedGeneration represents the .metadata.generation
                            that the condition was set based upon. For instance, if
                            .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                            is 9, the condition is out of date with respect to the
                            current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: reason contains a programmatic identifier indicating
                            the reason for the condition's last transition. Producers
                            of specific condition types may define expected values
                            and meanings for this field, and whether the values are
                            considered a guaranteed API. The value should be a CamelCase
                            string. This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            --- Many .condition.type values are consistent across
                            resources like Available, but because arbitrary conditions
                            can be useful (see .node.status.conditions), the ability
                            to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                  reason:
                    type: string
                  revision:
                    properties:
                      current:
                        type: string
                      target:
                        type: string
                    required:
                    - current
                    - target
                    type: object
                  state:
                    type: string
                type: object
              replicas:
                description: Expected number of replicas.
                format: int32
                type: integer
              service:
                description: Service status
                properties:
                  loadBalancer:
                    description: LoadBalancer status
                    properties:
                      ingress:
                        description: Ingress is a list containing ingress points for
                          the load-balancer. Traffic intended for the service should
                          be sent to these ingress points.
                        items:
                          description: 'LoadBalancerIngress represents the status
                            of a load-balancer ingress point: traffic intended for
                            the service should be sent to an ingress point.'
                          properties:
                            hostname:
                              description: Hostname is set for load-balancer ingress
                                points that are DNS based (typically AWS load-balancers)
                              type: string
                            ip:
                              description: IP is set for load-balancer ingress points
                                that are IP based (typically GCE or OpenStack load-balancers)
                              type: string
                            ports:
                              description: Ports is a list of records of service ports
                                If used, every port defined in the service should
                                have an entry in it
                              items:
                                properties:
                                  error:
                                    description: 'Error is to record the problem with
                                      the service port The format of the error shall
                                      comply with the following rules: - built-in
                                      error values shall be specified in this file
                                      and those shall use CamelCase names - cloud
                                      provider specific error values must have names
                                      that comply with the format foo.example.com/CamelCase.
                                      --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                    maxLength: 316
                                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                    type: string
                                  port:
                                    description: Port is the port number of the service
                                      port of which status is recorded here
                                    format: int32
                                    type: integer
                                  protocol:
                                    default: TCP
                                    description: 'Protocol is the protocol of the
                                      service port of which status is recorded here
                                      The supported values are: "TCP", "UDP", "SCTP"'
                                    type: string
                                required:
                                - port
                                - protocol
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        type: array
                    type: object
                  ports:
                    description: Ports status
                    items:
                      description: ServicePort contains information on service's port.
                      properties:
                        appProtocol:
                          description: The application protocol for this port. This
                            field follows standard Kubernetes label syntax. Un-prefixed
                            names are reserved for IANA standard service names (as
                            per RFC-6335 and https://www.iana.org/assignments/service-names).
                            Non-standard protocols should use prefixed names such
                            as mycompany.com/my-custom-protocol.
                          type: string
                        name:
                          description: The name of this port within the service. This
                            must be a DNS_LABEL. All ports within a ServiceSpec must
                            have unique names. When considering the endpoints for
                            a Service, this must match the 'name' field in the EndpointPort.
                            Optional if only one ServicePort is defined on this service.
                          type: string
                        nodePort:
                          description: 'The port on each node on which this service
                            is exposed when type is NodePort or LoadBalancer.  Usually
                            assigned by the system. If a value is specified, in-range,
                            and not in use it will be used, otherwise the operation
                            will fail.  If not specified, a port will be allocated
                            if this Service requires one.  If this field is specified
                            when creating a Service which does not need it, creation
                            will fail. This field will be wiped when updating a Service
                            to no longer need it (e.g. changing type from NodePort
                            to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                          format: int32
                          type: integer
                        port:
                          description: The port that will be exposed by this service.
                          format: int32
                          type: integer
                        protocol:
                          default: TCP
                          description: The IP protocol for this port. Supports "TCP",
                            "UDP", and "SCTP". Default is TCP.
                          type: string
                        targetPort:
                          anyOf:
                          - type: integer
                          - type: string
                          description: 'Number or name of the port to access on the
                            pods targeted by the service. Number must be in the range
                            1 to 65535. Name must be an IANA_SVC_NAME. If this is
                            a string, it will be looked up as a named port in the
                            target Pod''s container ports. If this is not specified,
                            the value of the ''port'' field is used (an identity map).
                            This field is ignored for services with clusterIP=None,
                            and should be omitted or set equal to the ''port'' field.
                            More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
