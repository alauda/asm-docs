apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: microservices.asm.alauda.io
spec:
  group: asm.alauda.io
  names:
    kind: MicroService
    listKind: MicroServiceList
    plural: microservices
    shortNames:
    - ms
    singular: microservice
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: MicroService is the Schema for the microservices API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MicroServiceSpec defines the desired state of MicroService
            properties:
              daemonsets:
                items:
                  properties:
                    name:
                      type: string
                    version:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              deployments:
                items:
                  properties:
                    name:
                      type: string
                    version:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              services:
                items:
                  type: string
                type: array
              statefulsets:
                items:
                  properties:
                    name:
                      type: string
                    version:
                      type: string
                  required:
                  - name
                  type: object
                type: array
            type: object
          status:
            description: MicroServiceStatus defines the observed state of MicroService
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: MicroService is the Schema for the microservices API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MicroServiceSpec defines the desired state of MicroService
            properties:
              daemonsets:
                items:
                  properties:
                    name:
                      type: string
                    version:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              deployments:
                items:
                  properties:
                    name:
                      type: string
                    version:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              services:
                items:
                  properties:
                    iscreatebysystem:
                      type: boolean
                    name:
                      type: string
                  required:
                  - iscreatebysystem
                  - name
                  type: object
                type: array
              statefulsets:
                items:
                  properties:
                    name:
                      type: string
                    version:
                      type: string
                  required:
                  - name
                  type: object
                type: array
            type: object
          status:
            description: MicroServiceStatus defines the observed state of MicroService
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: PHASE
      type: string
    - jsonPath: .status.sidecar.revision.current
      name: VERSION
      type: string
    - jsonPath: .status.sidecar.revision.target
      name: NEWVERSION
      type: string
    - jsonPath: .status.sidecar.state
      name: State
      type: string
    name: v1beta3
    schema:
      openAPIV3Schema:
        description: MicroService is the Schema for the microservices API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MicroServiceSpec defines the desired state of MicroService
            properties:
              accessLogging:
                description: Access-log configuration.
                properties:
                  enabled:
                    default: false
                    type: boolean
                required:
                - enabled
                type: object
              auth:
                description: Authentication information.
                properties:
                  enabled:
                    type: boolean
                type: object
              clusters:
                description: Cluster information.
                items:
                  properties:
                    name:
                      type: string
                    sidecarInject:
                      type: string
                  required:
                  - name
                  - sidecarInject
                  type: object
                type: array
              configMaps:
                description: Configuration.
                items:
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              daemonsets:
                description: Daemonset.
                items:
                  properties:
                    containerImage:
                      description: Container image.
                      items:
                        type: string
                      type: array
                    name:
                      description: Deployment name.
                      type: string
                    otelJavaAgentImage:
                      description: 'OpenTelemetry java agent image. Deprecated: OtelJavaAgentImage'
                      type: string
                    sidecarEnabled:
                      description: Whether to add sidecar.
                      type: boolean
                    version:
                      description: Deployment version。
                      type: string
                  required:
                  - name
                  type: object
                type: array
              deployments:
                description: Deployment.
                items:
                  properties:
                    containerImage:
                      description: Container image.
                      items:
                        type: string
                      type: array
                    name:
                      description: Deployment name.
                      type: string
                    otelJavaAgentImage:
                      description: 'OpenTelemetry java agent image. Deprecated: OtelJavaAgentImage'
                      type: string
                    sidecarEnabled:
                      description: Whether to add sidecar.
                      type: boolean
                    version:
                      description: Deployment version。
                      type: string
                  required:
                  - name
                  type: object
                type: array
              otelJavaAgent:
                description: OpenTelemetry Java agent configuration.
                properties:
                  agentFileName:
                    default: opentelemetry-javaagent-ext.jar
                    description: The file name of agent.
                    type: string
                  enabled:
                    default: false
                    description: Whether to add Otel Java Agent.
                    type: boolean
                  mountPath:
                    default: /agent
                    description: The mount path of the agent.
                    type: string
                  repository:
                    description: Image repository address of agent.
                    type: string
                  version:
                    description: Agent version.
                    type: string
                type: object
              secrets:
                description: Secret.
                items:
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              services:
                description: Kubernetes Service information.
                items:
                  properties:
                    iscreatebysystem:
                      description: Whether created by the system.
                      type: boolean
                    name:
                      description: Kubernetes Service name.
                      type: string
                  required:
                  - iscreatebysystem
                  - name
                  type: object
                type: array
              sidecar:
                properties:
                  excludeInboundPorts:
                    type: string
                  excludeOutboundIPRanges:
                    type: string
                  excludeOutboundPorts:
                    type: string
                type: object
              statefulsets:
                description: Statefulset.
                items:
                  properties:
                    containerImage:
                      description: Container image.
                      items:
                        type: string
                      type: array
                    name:
                      description: Deployment name.
                      type: string
                    otelJavaAgentImage:
                      description: 'OpenTelemetry java agent image. Deprecated: OtelJavaAgentImage'
                      type: string
                    sidecarEnabled:
                      description: Whether to add sidecar.
                      type: boolean
                    version:
                      description: Deployment version。
                      type: string
                  required:
                  - name
                  type: object
                type: array
              swagger:
                description: Swagger information.
                properties:
                  opId:
                    type: string
                  port:
                    type: integer
                  url:
                    type: string
                type: object
            type: object
          status:
            description: MicroServiceStatus defines the observed state of MicroService
            properties:
              availableReplicas:
                format: int32
                type: integer
              canHotUpgrade:
                description: Indicates whether the hot upgrade is enabled.
                type: boolean
              containsTcp:
                description: Is there any TCP service within?
                type: boolean
              deployStatus:
                type: string
              phase:
                type: string
              replicas:
                format: int32
                type: integer
              sidecar:
                description: SidecarStatus
                properties:
                  conditions:
                    items:
                      description: "Condition contains details for one aspect of the
                        current state of this API Resource. --- This struct is intended
                        for direct use as an array at the field path .status.conditions.
                        \ For example, type FooStatus struct{ // Represents the observations
                        of a foo's current state. // Known .status.conditions.type
                        are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                        // +patchStrategy=merge // +listType=map // +listMapKey=type
                        Conditions []metav1.Condition `json:\"conditions,omitempty\"
                        patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                        \n // other fields }"
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime is the last time the condition
                            transitioned from one status to another. This should be
                            when the underlying condition changed.  If that is not
                            known, then using the time when the API field changed
                            is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: message is a human readable message indicating
                            details about the transition. This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: observedGeneration represents the .metadata.generation
                            that the condition was set based upon. For instance, if
                            .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                            is 9, the condition is out of date with respect to the
                            current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: reason contains a programmatic identifier indicating
                            the reason for the condition's last transition. Producers
                            of specific condition types may define expected values
                            and meanings for this field, and whether the values are
                            considered a guaranteed API. The value should be a CamelCase
                            string. This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            --- Many .condition.type values are consistent across
                            resources like Available, but because arbitrary conditions
                            can be useful (see .node.status.conditions), the ability
                            to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                  reason:
                    type: string
                  revision:
                    properties:
                      current:
                        type: string
                      target:
                        type: string
                    required:
                    - current
                    - target
                    type: object
                  state:
                    type: string
                type: object
              sidecarHotUpgrade:
                properties:
                  status:
                    description: Mirror of actual sidecar hot upgrade status.
                    properties:
                      observedRef:
                        properties:
                          generation:
                            format: int64
                            type: integer
                          uid:
                            description: UID is a type that holds unique ID values,
                              including UUIDs.  Because we don't ONLY use UUIDs, this
                              is an alias to string.  Being a type captures intent
                              and helps make sure that UIDs and names do not get conflated.
                            type: string
                        type: object
                      progress:
                        description: HotUpgradeProgress
                        properties:
                          failed:
                            type: integer
                          pods:
                            items:
                              properties:
                                message:
                                  type: string
                                name:
                                  type: string
                                planUID:
                                  description: UID is a type that holds unique ID
                                    values, including UUIDs.  Because we don't ONLY
                                    use UUIDs, this is an alias to string.  Being
                                    a type captures intent and helps make sure that
                                    UIDs and names do not get conflated.
                                  type: string
                                state:
                                  type: string
                                target:
                                  type: string
                              required:
                              - name
                              - target
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          success:
                            type: integer
                          total:
                            type: integer
                        type: object
                      reason:
                        type: string
                      state:
                        type: string
                    type: object
                  version:
                    properties:
                      current:
                        type: string
                      target:
                        type: string
                    required:
                    - current
                    - target
                    type: object
                  versions:
                    items:
                      properties:
                        current:
                          type: string
                        name:
                          type: string
                        target:
                          type: string
                      required:
                      - current
                      - name
                      - target
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
              validatingStatus:
                description: otel status
                properties:
                  invalid:
                    type: boolean
                  message:
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
